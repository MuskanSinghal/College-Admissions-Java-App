/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package AdminLogin;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;

public class AdminLogin extends javax.swing.JFrame {

    /**
     * Creates new form AdminLogin
     */
    PriorityLinkedList plist=new PriorityLinkedList();
    public AdminLogin() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialog1 = new javax.swing.JDialog();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jDialog2 = new javax.swing.JDialog();
        jLabel7 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jDialog4 = new javax.swing.JDialog();
        jLabel11 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        admin_name = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        admin_pass = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("              ALLOTMENT PROCESS HAS COMPLETED");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("PES UNIVERSITY");

        jButton2.setText("Close");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel6.setText("Admin please click on close once allotment is complete");

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog1Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton2)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(49, Short.MAX_VALUE))
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel5)
                .addGap(35, 35, 35)
                .addComponent(jLabel4)
                .addGap(61, 61, 61)
                .addComponent(jLabel6)
                .addGap(18, 18, 18)
                .addComponent(jButton2)
                .addContainerGap(98, Short.MAX_VALUE))
        );

        jLabel7.setText("SORRY WRONG ADMIN PASSWORD OR USERNAME");

        jButton3.setText("Exit");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel8.setText("Please click Exit");

        javax.swing.GroupLayout jDialog2Layout = new javax.swing.GroupLayout(jDialog2.getContentPane());
        jDialog2.getContentPane().setLayout(jDialog2Layout);
        jDialog2Layout.setHorizontalGroup(
            jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 336, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(54, Short.MAX_VALUE))
        );
        jDialog2Layout.setVerticalGroup(
            jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog2Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel8)
                .addGap(53, 53, 53)
                .addComponent(jButton3)
                .addContainerGap(150, Short.MAX_VALUE))
        );

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel11.setText("LOGIN SUCCESSFUL");

        jButton5.setText("START ALLOTMENT");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("DELETE ALLOTTED SEAT");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jDialog4Layout = new javax.swing.GroupLayout(jDialog4.getContentPane());
        jDialog4.getContentPane().setLayout(jDialog4Layout);
        jDialog4Layout.setHorizontalGroup(
            jDialog4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog4Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jDialog4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jDialog4Layout.createSequentialGroup()
                        .addComponent(jButton5)
                        .addGap(85, 85, 85)
                        .addComponent(jButton6))
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(12, Short.MAX_VALUE))
        );
        jDialog4Layout.setVerticalGroup(
            jDialog4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog4Layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addComponent(jLabel11)
                .addGap(52, 52, 52)
                .addGroup(jDialog4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton5)
                    .addComponent(jButton6))
                .addContainerGap(162, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("ADMINISTRATOR LOGIN");

        jLabel2.setText("Username");

        jLabel3.setText("Password");

        jButton1.setText("LOGIN");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(admin_name))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(admin_pass)))
                    .addComponent(jButton1))
                .addContainerGap(72, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(admin_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3)
                    .addComponent(admin_pass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addComponent(jButton1)
                .addContainerGap(135, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        String admin_username=admin_name.getText();
        String admin_password=admin_pass.getText();
        if((admin_username.equals("admin"))&&(admin_password.equals("admin")))
        {
            this.setVisible(false);
            jDialog4.setSize(500,500);
            jDialog4.setVisible(true);
             
        }
        else
        {
                this.setVisible(false);
                jDialog2.setSize(500,500);
                jDialog2.setVisible(true);
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        jDialog1.setVisible(false);
        System.exit(0);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        jDialog2.setVisible(false);
        System.exit(0);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        plist.remove();
        jDialog4.setVisible(false);
        jDialog1.setSize(500, 500);
        jDialog1.setVisible(true);
        System.exit(0);
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        try {
            readintopriority();
            
        } catch (IOException ex) {
            System.out.print("File unreadable");
        }
        jDialog4.setVisible(false);
        jDialog1.setSize(500, 500);
        jDialog1.setVisible(true);
        
        
    }//GEN-LAST:event_jButton5ActionPerformed
    public void readintopriority() throws IOException 
    {
        File files = new File("C:\\Users\\Ashwin Shreyas\\Desktop\\abc.txt");
        BufferedReader br = new BufferedReader(new InputStreamReader(new FileInputStream(files)));
        String line = null;
        String var_1;
        String var_2;
        String var_3;
        String var_4;
        //int boo;
        String [] tokens;
        //LinkedList linked=new LinkedList();
        while( (line = br.readLine())!= null ){
        tokens = line.split("\\s+"); 
        //tokens = line.split("\\|+");
        var_1 = tokens[0]; //name
        var_2  = tokens[1]; //roll number1
        var_3 = tokens[2]; //rank
        int foo =Integer.parseInt(var_3);
        plist.endIns(var_1,var_2,foo);
        }   
        br.close();
        plist.readseats();
        plist.allot();
    
    }
    

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdminLogin().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField admin_name;
    private javax.swing.JTextField admin_pass;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JDialog jDialog2;
    private javax.swing.JDialog jDialog4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    // End of variables declaration//GEN-END:variables
}
class PriorityNode
{
   int serial;
   String name;
   String RollNum;
   int rank;
   PriorityNode next;
   
   
   PriorityNode(int sl, String a,String b,int c)
   {
      name=a;
      RollNum=b;
      rank=c;
      serial=sl;
      next=null;
   }
}

class Node
{
   String name;
   String RollNum;
   int rank;
   String dept;
   Node next;
   
   
   Node(String a,String b,int c, String d)
   {
      name=a;
      RollNum=b;
      rank=c;
      dept=d;
      next=null;
   }
}

class PriorityLinkedList
{
 PriorityNode slist=null;
 CSLinkedList cslist=new CSLinkedList();
 ECLinkedList eclist=new ECLinkedList();
 BTLinkedList btlist=new BTLinkedList();
 int csleft;
 int ecleft;
 int btleft;
 int serial=1;
 Scanner in=null;
 public void endIns(String a, String b,int c)
 {
   PriorityNode newnode=new PriorityNode(serial,a,b,c);
   if(slist==null)
   {
      slist=newnode;
   }
   else if(newnode.rank<slist.rank)
   {
      newnode.next=slist;
      slist=newnode;
      serial++;
   }
   else
   {
      PriorityNode temp=slist;
      PriorityNode prev=null;
      while(temp.next!=null && temp.rank<newnode.rank)
      {
         prev=temp;
         temp=temp.next;
      }
      if(newnode.rank<temp.rank)
      {
         prev.next=newnode;
         newnode.next=temp;
         serial++;
      }
      else
      {
         temp.next=newnode;
         serial++;
      }
   }
 }
   public void readseats()
   {
       File f=new File("C:\\Users\\Ashwin Shreyas\\Desktop\\seatsleft.txt");
       BufferedReader br=null;
       String line=null;
       String tokens[];
     try {
         br=new BufferedReader(new InputStreamReader(new FileInputStream(f)));
           try {
               while((line = br.readLine())!= null )
               {
                   tokens=line.split("\\s+");
                   csleft=Integer.parseInt(tokens[0]);
                   ecleft=Integer.parseInt(tokens[1]);
                   btleft=Integer.parseInt(tokens[2]);
               } 
           } 
               catch (IOException ex) 
               {
                   System.out.print("File unreadable");
                }
     } 
     catch (FileNotFoundException ex) 
     {
         System.out.println("File Not Found");
     }
       
   }
   public void writeseatsleft()throws IOException
   {
       File file=new File("C:\\Users\\Ashwin Shreyas\\Desktop\\seatsleft.txt");
        if (!file.exists()) 
        {
            file.createNewFile();
        }
        FileWriter fw = new FileWriter(file.getAbsoluteFile());
        BufferedWriter bw = new BufferedWriter(fw);
        bw.write(csleft+" ");
        bw.write(ecleft+" ");
        bw.write(btleft+" ");
        bw.close();
   }
   public void allot()
   {
   PriorityNode temp=slist;
   while(temp!=null)
   {
      System.out.println(temp.name);
      System.out.println(temp.RollNum);
      System.out.println(temp.rank);
      
      if((temp.rank <=100)&&((csleft>0)||(ecleft>0)||(btleft>0)))
      {
         System.out.println("The departments available for you are: \n1.CS \n2.EC \n3.BT\n");
         in=new Scanner(System.in);
         Scanner a=new Scanner(System.in);
         System.out.println("Seats left");
         System.out.println("Computer Science : "+csleft);
         System.out.println("Electronics : "+ecleft);
         System.out.println("Bio-Technology : "+btleft);
         System.out.println("Enter your choice");
         int choice=in.nextInt();
         String ch;
         switch(choice)
         {
            case 1: 
                    {
                     ch= "CS"; 
                     cslist.endIns(temp.name,temp.RollNum,temp.rank,ch);
                     csleft--;
                     try 
                    {
                        writeseatsleft();
                    }   
                    catch (IOException ex) 
                    {
                    System.out.print("Unable to write");
                    }

                     break;
                     }
            
            case 2:  {
                     ch="EC";
                     eclist.endIns(temp.name,temp.RollNum,temp.rank,ch);
                     ecleft--;
                     try 
                    {
                        writeseatsleft();
                    }   
                    catch (IOException ex) 
                    {
                    System.out.print("Unable to write");
                    }

                     break;
                     }           
            case 3:  {
                     ch="BT";
                     btlist.endIns(temp.name,temp.RollNum,temp.rank,ch);
                     btleft--;
                     try 
                    {
                        writeseatsleft();
                    }   
                    catch (IOException ex) 
                    {
                    System.out.print("Unable to write");
                    }

                     break;
                     }
            default: System.out.println("Invalid choice");
                     break;
         }
      }
      
      if(((temp.rank >100)&&(temp.rank <=200))&&((ecleft>0)||(btleft>0)))
      {
         System.out.println("The departments available for you are:\n1.EC \n2.BT\n");
         Scanner in=new Scanner(System.in);
         Scanner a=new Scanner(System.in);
         System.out.println("Seats left");
         System.out.println("Computer Science : "+csleft);
         System.out.println("Electronics : "+ecleft);
         System.out.println("Bio-Technology : "+btleft);
         System.out.println("Enter your choice");
         int choice=in.nextInt();
         String ch;
         switch(choice)
         {
            case 1:  {
                     ch= "EC"; 
                     eclist.endIns(temp.name,temp.RollNum,temp.rank,ch);
                     ecleft--;
                    try 
                    {
                        writeseatsleft();
                    }   
                    catch (IOException ex) 
                    {
                    System.out.print("Unable to write");
                    }
                     break;
                     }           
            case 2:  {
                     ch="BT";
                     btlist.endIns(temp.name,temp.RollNum,temp.rank,ch);
                     btleft--;
                     try 
                    {
                        writeseatsleft();
                    }   
                    catch (IOException ex) 
                    {
                    System.out.print("Unable to write");
                    }

                     break;
                     }
            default: System.out.println("Invalid choice");
                     break;
         }
      }
      if(((temp.rank >200)&&(temp.rank <=300))&&(btleft>0))
      {
         System.out.println("The departments available for you are:\n1.BT\n");
         Scanner in=new Scanner(System.in);
         Scanner a=new Scanner(System.in);
         System.out.println("Seats left");
         System.out.println("Computer Science : "+csleft);
         System.out.println("Electronics : "+ecleft);
         System.out.println("Bio-Technology : "+btleft);
         System.out.println("Enter your choice");
         int choice=in.nextInt();
         String ch;
         switch(choice)
         {
            case 1:  {
                     ch= "BT"; 
                     btlist.endIns(temp.name,temp.RollNum,temp.rank,ch);
                     btleft--;
                     try 
                    {
                        writeseatsleft();
                    }   
                    catch (IOException ex) 
                    {
                    System.out.print("Unable to write");
                    }

                     break;
                     }
            default: System.out.println("Invalid choice");
                     break;
         }
      } 
       
      temp=temp.next;
   }
   cslist.display();
   eclist.display();
   btlist.display();
   try{
   cslist.writeFile1();
   eclist.writeFile1();
   btlist.writeFile1();
   }
   catch(IOException e)
   {
      System.out.println(e);
   }
   }
   public void remove()
   {
       CSLinkedList newcs=new CSLinkedList();
       ECLinkedList newec=new ECLinkedList();
       BTLinkedList newbt=new BTLinkedList();
       System.out.print("remove");
       File f=new File("C:\\Users\\Ashwin Shreyas\\Desktop\\csout.txt");
       BufferedReader br=null;
       String line=null;
       String tokens[];
       try {
         br=new BufferedReader(new InputStreamReader(new FileInputStream(f)));
           try {
               br.readLine();
               while((line = br.readLine())!= null )
               {
                  tokens=line.split("\\s+");
                  int r=Integer.parseInt(tokens[2]);
                  newcs.endIns(tokens[0], tokens[1], r,tokens[3]);
               } 
            } 
               catch (IOException ex) 
               {
                   System.out.print("File unreadable");
                }
     } 
     catch (FileNotFoundException ex) 
     {
         System.out.println("File Not Found");
     }
    File f1=new File("C:\\Users\\Ashwin Shreyas\\Desktop\\ecout.txt");
       BufferedReader br1=null;
       String line1=null;
       String tokens1[];
       try {
         br1=new BufferedReader(new InputStreamReader(new FileInputStream(f1)));
           try {
               br1.readLine();
               while((line1 = br1.readLine())!= null )
               {
                  tokens1=line1.split("\\s+");
                  int r=Integer.parseInt(tokens1[2]);
                  newec.endIns(tokens1[0], tokens1[1], r,tokens1[3]);
               } 
            } 
               catch (IOException ex) 
               {
                   System.out.print("File unreadable");
                }
     } 
     catch (FileNotFoundException ex) 
     {
         System.out.println("File Not Found");
     }
   
       File f2=new File("C:\\Users\\Ashwin Shreyas\\Desktop\\btout.txt");
       BufferedReader br2=null;
       String line2=null;
       String tokens2[];
       try {
         br2=new BufferedReader(new InputStreamReader(new FileInputStream(f2)));
           try {
               br2.readLine();
               while((line2 = br2.readLine())!= null )
               {
                  tokens2=line2.split("\\s+");
                  int r=Integer.parseInt(tokens2[2]);
                  newbt.endIns(tokens2[0], tokens2[1], r,tokens2[3]);
               } 
            } 
               catch (IOException ex) 
               {
                   System.out.print("File unreadable");
                }
     } 
     catch (FileNotFoundException ex) 
     {
         System.out.println("File Not Found");
     }
   
   readseats();  
   System.out.println("Deletion: Enter 0 or 1");
   Scanner n = new Scanner(System.in);
   int x=n.nextInt();
   if(x==0)
   {
      System.out.println("Enter department chosen");
      Scanner b=new Scanner(System.in);
      String department=b.nextLine();
      System.out.println("Enter roll number of the seat you want to delete");
      Scanner a=new Scanner(System.in);
      int roll=a.nextInt();
      if(department.equals("CS"))
      { 
         newcs.delete(roll);
         csleft++;
         try
         {
            newcs.writeFile1();
            writeseatsleft();
         }
         catch(IOException ex)
         {
            System.out.println(ex);
         }
      }
      if(department.equals("EC"))
      { 
         newec.delete(roll);
         ecleft++;
         try
         {
            newec.writeFile1();
            writeseatsleft();
         }
         catch(IOException ex)
         {
            System.out.println(ex);
         }
      }
      if(department.equals("BT"))
      { 
         newbt.delete(roll);
         btleft++;
         try
         {
            newbt.writeFile1();
            writeseatsleft();
         }
         catch(IOException ex)
         {
            System.out.println(ex);
         }
      }
   }
   else
   System.out.println("OK");
   }
} 

class CSLinkedList
{
 
 Node silist=null;
 public void endIns(String a, String b,int c,String d)
 {
   Node newnode=new Node(a,b,c,d);
   if(silist==null)
   {
      silist=newnode;
   }
   else
   {
      Node temp=silist;
      while(temp.next!=null)
      {
         temp=temp.next;
      }
      temp.next=newnode;
    }
 }
   public void delete(int r)
   {
      
      if(silist==null)
      {
         display();
         System.out.println("Empty");
      }
      else if(r==Integer.parseInt(silist.RollNum))
      {
         silist=silist.next;
      }
      else
      {
         Node prev=null;
         Node temp=silist;
         while(temp.next!=null && Integer.parseInt(temp.RollNum) !=r)
         {
            prev=temp;
            temp=temp.next;
         }
         if(Integer.parseInt(temp.RollNum)==r)
         {
            prev.next=temp.next;
         }
         else
         {
            System.out.println("Roll Number not found ! Seat not allotted to you");
         }
      }
      try{
   writeFile1();
   }
   catch(IOException ex)
   {
      System.out.println(ex);
   }
    }
   public void display()
   {
      Node temp=silist;
      //System.out.print("hey");
      while(temp!=null)
      {
         //System.out.print("HII");
         System.out.print(temp.name+" ");
         System.out.print(temp.RollNum+" ");
         System.out.print(temp.rank+" ");
         System.out.print(temp.dept+" ");
         System.out.println();
         temp=temp.next;
      }
   
   }
   public void writeFile1() throws IOException
   {
   Node temp=silist;
   File file = new File("C:\\Users\\Ashwin Shreyas\\Desktop\\csout.txt");
   if (!file.exists()) 
   {
	 file.createNewFile();
   }
   FileWriter fw = new FileWriter(file.getAbsoluteFile());
   BufferedWriter bw = new BufferedWriter(fw);
   bw.write("Name"+" ");
   bw.write("RollNum"+" ");
   bw.write("Rank"+" ");
   bw.write("Dept"+" "); 
   bw.newLine();  
   while(temp!=null) 
   {
		bw.write(temp.name+" ");
      bw.write(temp.RollNum+" ");
      bw.write(temp.rank+" ");
      bw.write(temp.dept+" ");
		bw.newLine();
      temp=temp.next;
	}
   bw.close();
  }
}
   
   class ECLinkedList
   {
      Node silist=null;
      public void endIns(String a, String b,int c,String d)
      {
         Node newnode=new Node(a,b,c,d);
         if(silist==null)
         {
         silist=newnode;
         }
         else
         {
      Node temp=silist;
      while(temp.next!=null)
      {
         temp=temp.next;
      }
      temp.next=newnode;
    }
   }
   public void delete(int r)
   {
      
      if(silist==null)
      {
         display();
         System.out.println("Empty");
      }
      else if(r==Integer.parseInt(silist.RollNum))
      {
         silist=silist.next;
      }
      else
      {
         Node prev=null;
         Node temp=silist;
         while(temp.next!=null && Integer.parseInt(temp.RollNum) !=r)
         {
            prev=temp;
            temp=temp.next;
         }
         if(Integer.parseInt(temp.RollNum)==r)
         {
            prev.next=temp.next;
         }
         else
         {
            System.out.println("Roll Number not found ! Seat not allotted to you");
         }
      }
      try{
   writeFile1();
   }
   catch(IOException ex)
   {
      System.out.println(ex);
   }
    }
   public void display()
   {
      Node temp=silist;
      //System.out.print("hey");
      while(temp!=null)
      {
         //System.out.print("HII");
         System.out.print(temp.name+" ");
         System.out.print(temp.RollNum+" ");
         System.out.print(temp.rank+" ");
         System.out.print(temp.dept+" ");
         System.out.println();
         temp=temp.next;
      }
   
   }  
   public void writeFile1() throws IOException
   {
   Node temp=silist;
   File file = new File("C:\\Users\\Ashwin Shreyas\\Desktop\\ecout.txt");
   if (!file.exists()) 
   {
	 file.createNewFile();
   }
   FileWriter fw = new FileWriter(file.getAbsoluteFile());
   BufferedWriter bw = new BufferedWriter(fw);
   bw.write("Name"+" ");
   bw.write("RollNum"+" ");
   bw.write("Rank"+" ");
   bw.write("Dept"+" "); 
   bw.newLine();  
   while(temp!=null) 
   {
		bw.write(temp.name+" ");
      bw.write(temp.RollNum+" ");
      bw.write(temp.rank+" ");
      bw.write(temp.dept+" ");
		bw.newLine();
      temp=temp.next;
	}
   bw.close();
  }
}
   
   class BTLinkedList
   {
      Node silist=null;
      public void endIns(String a, String b,int c,String d)
      {
         Node newnode=new Node(a,b,c,d);
         if(silist==null)
         {
         silist=newnode;
         }
         else
         {
      Node temp=silist;
      while(temp.next!=null)
      {
         temp=temp.next;
      }
      temp.next=newnode;
    }
   }
   public void delete(int r)
   {
      
      if(silist==null)
      {
         display();
         System.out.println("Empty");
      }
      else if(r==Integer.parseInt(silist.RollNum))
      {
         silist=silist.next;
      }
      else
      {
         Node prev=null;
         Node temp=silist;
         while(temp.next!=null && Integer.parseInt(temp.RollNum) !=r)
         {
            prev=temp;
            temp=temp.next;
         }
         if(Integer.parseInt(temp.RollNum)==r)
         {
            prev.next=temp.next;
         }
         else
         {
            System.out.println("Roll Number not found ! Seat not allotted to you");
         }
      }
      try{
   writeFile1();
   }
   catch(IOException ex)
   {
      System.out.println(ex);
   }
    }
   public void display()
   {
      Node temp=silist;
      //System.out.print("hey");
      while(temp!=null)
      {
         //System.out.print("HII");
         System.out.print(temp.name+" ");
         System.out.print(temp.RollNum+" ");
         System.out.print(temp.rank+" ");
         System.out.print(temp.dept+" ");
         System.out.println();
         temp=temp.next;
      }
   
   }  
   public void writeFile1() throws IOException
   {
   Node temp=silist;
   File file = new File("C:\\Users\\Ashwin Shreyas\\Desktop\\btout.txt");
   if (!file.exists()) 
   {
	 file.createNewFile();
   }
   FileWriter fw = new FileWriter(file.getAbsoluteFile());
   BufferedWriter bw = new BufferedWriter(fw);
   bw.write("Name"+" ");
   bw.write("RollNum"+" ");
   bw.write("Rank"+" ");
   bw.write("Dept"+" "); 
   bw.newLine();  
   while(temp!=null) 
   {
		bw.write(temp.name+" ");
      bw.write(temp.RollNum+" ");
      bw.write(temp.rank+" ");
      bw.write(temp.dept+" ");
		bw.newLine();
      temp=temp.next;
	}
   bw.close();
  }
}


